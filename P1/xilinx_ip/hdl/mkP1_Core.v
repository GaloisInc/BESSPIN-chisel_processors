//
// Generated by Bluespec Compiler, version 2017.07.A (build 1da80f1, 2017-07-21)
//
// On Wed Jan 16 16:29:45 PST 2019
//
//
// Ports:
// Name                         I/O  size props
// master0_awvalid                O     1 reg
// master0_awid                   O     4 const
// master0_awaddr                 O    64 reg
// master0_awlen                  O     8 const
// master0_awsize                 O     3 const
// master0_awburst                O     2 const
// master0_awlock                 O     1 const
// master0_awcache                O     4 const
// master0_awprot                 O     3 reg
// master0_awqos                  O     4 const
// master0_awregion               O     4 const
// master0_wvalid                 O     1 reg
// master0_wdata                  O    64 reg
// master0_wstrb                  O     8 reg
// master0_wlast                  O     1 const
// master0_bready                 O     1 reg
// master0_arvalid                O     1 reg
// master0_arid                   O     4 const
// master0_araddr                 O    64 reg
// master0_arlen                  O     8 const
// master0_arsize                 O     3 const
// master0_arburst                O     2 const
// master0_arlock                 O     1 const
// master0_arcache                O     4 const
// master0_arprot                 O     3 reg
// master0_arqos                  O     4 const
// master0_arregion               O     4 const
// master0_rready                 O     1 reg
// master1_awvalid                O     1
// master1_awid                   O     4 const
// master1_awaddr                 O    64 reg
// master1_awlen                  O     8 const
// master1_awsize                 O     3 const
// master1_awburst                O     2 const
// master1_awlock                 O     1 const
// master1_awcache                O     4 const
// master1_awprot                 O     3 reg
// master1_awqos                  O     4 const
// master1_awregion               O     4 const
// master1_wvalid                 O     1
// master1_wdata                  O    64 reg
// master1_wstrb                  O     8 reg
// master1_wlast                  O     1 const
// master1_bready                 O     1
// master1_arvalid                O     1
// master1_arid                   O     4 const
// master1_araddr                 O    64 reg
// master1_arlen                  O     8 const
// master1_arsize                 O     3 const
// master1_arburst                O     2 const
// master1_arlock                 O     1 const
// master1_arcache                O     4 const
// master1_arprot                 O     3 reg
// master1_arqos                  O     4 const
// master1_arregion               O     4 const
// master1_rready                 O     1
// jtag_tdo                       O     1
// CLK_jtag_tclk_out              O     1 clock
// CLK_GATE_jtag_tclk_out         O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// master0_awready                I     1
// master0_wready                 I     1
// master0_bvalid                 I     1
// master0_bid                    I     4 unused
// master0_bresp                  I     2 reg
// master0_arready                I     1
// master0_rvalid                 I     1
// master0_rid                    I     4 unused
// master0_rdata                  I    64 reg
// master0_rresp                  I     2 reg
// master0_rlast                  I     1 unused
// master1_awready                I     1
// master1_wready                 I     1
// master1_bvalid                 I     1
// master1_bid                    I     4 unused
// master1_bresp                  I     2 reg
// master1_arready                I     1
// master1_rvalid                 I     1
// master1_rid                    I     4 unused
// master1_rdata                  I    64 reg
// master1_rresp                  I     2 reg
// master1_rlast                  I     1 unused
// cpu_external_interrupt_req     I     1 reg
// jtag_tdi                       I     1
// jtag_tms                       I     1
// jtag_tclk                      I     1
//
// Combinational paths from inputs to outputs:
//   (master1_awready, master1_wready) -> master1_bready
//   (master1_awready, master1_wready) -> master1_rready
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkP1_Core(CLK,
		 RST_N,

		 master0_awvalid,

		 master0_awid,

		 master0_awaddr,

		 master0_awlen,

		 master0_awsize,

		 master0_awburst,

		 master0_awlock,

		 master0_awcache,

		 master0_awprot,

		 master0_awqos,

		 master0_awregion,

		 master0_awready,

		 master0_wvalid,

		 master0_wdata,

		 master0_wstrb,

		 master0_wlast,

		 master0_wready,

		 master0_bvalid,
		 master0_bid,
		 master0_bresp,

		 master0_bready,

		 master0_arvalid,

		 master0_arid,

		 master0_araddr,

		 master0_arlen,

		 master0_arsize,

		 master0_arburst,

		 master0_arlock,

		 master0_arcache,

		 master0_arprot,

		 master0_arqos,

		 master0_arregion,

		 master0_arready,

		 master0_rvalid,
		 master0_rid,
		 master0_rdata,
		 master0_rresp,
		 master0_rlast,

		 master0_rready,

		 master1_awvalid,

		 master1_awid,

		 master1_awaddr,

		 master1_awlen,

		 master1_awsize,

		 master1_awburst,

		 master1_awlock,

		 master1_awcache,

		 master1_awprot,

		 master1_awqos,

		 master1_awregion,

		 master1_awready,

		 master1_wvalid,

		 master1_wdata,

		 master1_wstrb,

		 master1_wlast,

		 master1_wready,

		 master1_bvalid,
		 master1_bid,
		 master1_bresp,

		 master1_bready,

		 master1_arvalid,

		 master1_arid,

		 master1_araddr,

		 master1_arlen,

		 master1_arsize,

		 master1_arburst,

		 master1_arlock,

		 master1_arcache,

		 master1_arprot,

		 master1_arqos,

		 master1_arregion,

		 master1_arready,

		 master1_rvalid,
		 master1_rid,
		 master1_rdata,
		 master1_rresp,
		 master1_rlast,

		 master1_rready,

		 cpu_external_interrupt_req,

		 jtag_tdi,

		 jtag_tms,

		 jtag_tclk,

		 jtag_tdo,

		 CLK_jtag_tclk_out,
		 CLK_GATE_jtag_tclk_out);

  input  CLK;
  input  RST_N;

  // value method master0_m_awvalid
  output master0_awvalid;

  // value method master0_m_awid
  output [3 : 0] master0_awid;

  // value method master0_m_awaddr
  output [63 : 0] master0_awaddr;

  // value method master0_m_awlen
  output [7 : 0] master0_awlen;

  // value method master0_m_awsize
  output [2 : 0] master0_awsize;

  // value method master0_m_awburst
  output [1 : 0] master0_awburst;

  // value method master0_m_awlock
  output master0_awlock;

  // value method master0_m_awcache
  output [3 : 0] master0_awcache;

  // value method master0_m_awprot
  output [2 : 0] master0_awprot;

  // value method master0_m_awqos
  output [3 : 0] master0_awqos;

  // value method master0_m_awregion
  output [3 : 0] master0_awregion;

  // value method master0_m_awuser

  // action method master0_m_awready
  input  master0_awready;

  // value method master0_m_wvalid
  output master0_wvalid;

  // value method master0_m_wdata
  output [63 : 0] master0_wdata;

  // value method master0_m_wstrb
  output [7 : 0] master0_wstrb;

  // value method master0_m_wlast
  output master0_wlast;

  // value method master0_m_wuser

  // action method master0_m_wready
  input  master0_wready;

  // action method master0_m_bvalid
  input  master0_bvalid;
  input  [3 : 0] master0_bid;
  input  [1 : 0] master0_bresp;

  // value method master0_m_bready
  output master0_bready;

  // value method master0_m_arvalid
  output master0_arvalid;

  // value method master0_m_arid
  output [3 : 0] master0_arid;

  // value method master0_m_araddr
  output [63 : 0] master0_araddr;

  // value method master0_m_arlen
  output [7 : 0] master0_arlen;

  // value method master0_m_arsize
  output [2 : 0] master0_arsize;

  // value method master0_m_arburst
  output [1 : 0] master0_arburst;

  // value method master0_m_arlock
  output master0_arlock;

  // value method master0_m_arcache
  output [3 : 0] master0_arcache;

  // value method master0_m_arprot
  output [2 : 0] master0_arprot;

  // value method master0_m_arqos
  output [3 : 0] master0_arqos;

  // value method master0_m_arregion
  output [3 : 0] master0_arregion;

  // value method master0_m_aruser

  // action method master0_m_arready
  input  master0_arready;

  // action method master0_m_rvalid
  input  master0_rvalid;
  input  [3 : 0] master0_rid;
  input  [63 : 0] master0_rdata;
  input  [1 : 0] master0_rresp;
  input  master0_rlast;

  // value method master0_m_rready
  output master0_rready;

  // value method master1_m_awvalid
  output master1_awvalid;

  // value method master1_m_awid
  output [3 : 0] master1_awid;

  // value method master1_m_awaddr
  output [63 : 0] master1_awaddr;

  // value method master1_m_awlen
  output [7 : 0] master1_awlen;

  // value method master1_m_awsize
  output [2 : 0] master1_awsize;

  // value method master1_m_awburst
  output [1 : 0] master1_awburst;

  // value method master1_m_awlock
  output master1_awlock;

  // value method master1_m_awcache
  output [3 : 0] master1_awcache;

  // value method master1_m_awprot
  output [2 : 0] master1_awprot;

  // value method master1_m_awqos
  output [3 : 0] master1_awqos;

  // value method master1_m_awregion
  output [3 : 0] master1_awregion;

  // value method master1_m_awuser

  // action method master1_m_awready
  input  master1_awready;

  // value method master1_m_wvalid
  output master1_wvalid;

  // value method master1_m_wdata
  output [63 : 0] master1_wdata;

  // value method master1_m_wstrb
  output [7 : 0] master1_wstrb;

  // value method master1_m_wlast
  output master1_wlast;

  // value method master1_m_wuser

  // action method master1_m_wready
  input  master1_wready;

  // action method master1_m_bvalid
  input  master1_bvalid;
  input  [3 : 0] master1_bid;
  input  [1 : 0] master1_bresp;

  // value method master1_m_bready
  output master1_bready;

  // value method master1_m_arvalid
  output master1_arvalid;

  // value method master1_m_arid
  output [3 : 0] master1_arid;

  // value method master1_m_araddr
  output [63 : 0] master1_araddr;

  // value method master1_m_arlen
  output [7 : 0] master1_arlen;

  // value method master1_m_arsize
  output [2 : 0] master1_arsize;

  // value method master1_m_arburst
  output [1 : 0] master1_arburst;

  // value method master1_m_arlock
  output master1_arlock;

  // value method master1_m_arcache
  output [3 : 0] master1_arcache;

  // value method master1_m_arprot
  output [2 : 0] master1_arprot;

  // value method master1_m_arqos
  output [3 : 0] master1_arqos;

  // value method master1_m_arregion
  output [3 : 0] master1_arregion;

  // value method master1_m_aruser

  // action method master1_m_arready
  input  master1_arready;

  // action method master1_m_rvalid
  input  master1_rvalid;
  input  [3 : 0] master1_rid;
  input  [63 : 0] master1_rdata;
  input  [1 : 0] master1_rresp;
  input  master1_rlast;

  // value method master1_m_rready
  output master1_rready;

  // action method cpu_external_interrupt
  input  cpu_external_interrupt_req;

  // action method jtag_tdi
  input  jtag_tdi;

  // action method jtag_tms
  input  jtag_tms;

  // action method jtag_tclk
  input  jtag_tclk;

  // value method jtag_tdo
  output jtag_tdo;

  // oscillator and gates for output clock CLK_jtag_tclk_out
  output CLK_jtag_tclk_out;
  output CLK_GATE_jtag_tclk_out;

  // Add user logic here

  // rocket internal signals
  wire reset;
  wire [10:0] debug_xilinxjtag_mfr_id;

  // rocket unused outputs
  wire debug_xilinxjtag_jtag_TDO_driven;
  wire debug_ndreset;
  wire debug_dmactive;

  P1System i_P1System (
    .clock                           (CLK                             ),
    .reset                           (reset                           ),
    .interrupts                      ({1'b0, cpu_external_interrupt_req}),
    .debug_xilinxjtag_jtag_TCK       (jtag_tck                        ),
    .debug_xilinxjtag_jtag_TMS       (jtag_tms                        ),
    .debug_xilinxjtag_jtag_TDI       (jtag_tdi                        ),
    .debug_xilinxjtag_jtag_TDO_data  (jtag_tdo                        ),
    .debug_xilinxjtag_jtag_TDO_driven(debug_xilinxjtag_jtag_TDO_driven),
    .debug_xilinxjtag_reset          (reset                           ),
    .debug_xilinxjtag_mfr_id         (debug_xilinxjtag_mfr_id         ),
    .debug_ndreset                   (debug_ndreset                   ),
    .debug_dmactive                  (debug_dmactive                  ),
    .mem_axi4_0_aw_ready             (master0_awready                 ),
    .mem_axi4_0_aw_valid             (master0_awvalid                 ),
    .mem_axi4_0_aw_bits_id           (master0_awid                    ),
    .mem_axi4_0_aw_bits_addr         (master0_awaddr[31:0]            ),
    .mem_axi4_0_aw_bits_len          (master0_awlen                   ),
    .mem_axi4_0_aw_bits_size         (master0_awsize                  ),
    .mem_axi4_0_aw_bits_burst        (master0_awburst                 ),
    .mem_axi4_0_aw_bits_lock         (master0_awlock                  ),
    .mem_axi4_0_aw_bits_cache        (master0_awcache                 ),
    .mem_axi4_0_aw_bits_prot         (master0_awprot                  ),
    .mem_axi4_0_aw_bits_qos          (master0_awqos                   ),
    .mem_axi4_0_w_ready              (master0_wready                  ),
    .mem_axi4_0_w_valid              (master0_wvalid                  ),
    .mem_axi4_0_w_bits_data          (master0_wdata             ),
    .mem_axi4_0_w_bits_strb          (master0_wstrb                   ),
    .mem_axi4_0_w_bits_last          (master0_wlast                   ),
    .mem_axi4_0_b_ready              (master0_bready                  ),
    .mem_axi4_0_b_valid              (master0_bvalid                  ),
    .mem_axi4_0_b_bits_id            (master0_bid                     ),
    .mem_axi4_0_b_bits_resp          (master0_bresp                   ),
    .mem_axi4_0_ar_ready             (master0_arready                 ),
    .mem_axi4_0_ar_valid             (master0_arvalid                 ),
    .mem_axi4_0_ar_bits_id           (master0_arid                    ),
    .mem_axi4_0_ar_bits_addr         (master0_araddr[31:0]            ),
    .mem_axi4_0_ar_bits_len          (master0_arlen                   ),
    .mem_axi4_0_ar_bits_size         (master0_arsize                  ),
    .mem_axi4_0_ar_bits_burst        (master0_arburst                 ),
    .mem_axi4_0_ar_bits_lock         (master0_arlock                  ),
    .mem_axi4_0_ar_bits_cache        (master0_arcache                 ),
    .mem_axi4_0_ar_bits_prot         (master0_arprot                  ),
    .mem_axi4_0_ar_bits_qos          (master0_arqos                   ),
    .mem_axi4_0_r_ready              (master0_rready                  ),
    .mem_axi4_0_r_valid              (master0_rvalid                  ),
    .mem_axi4_0_r_bits_id            (master0_rid                     ),
    .mem_axi4_0_r_bits_data          (master0_rdata             ),
    .mem_axi4_0_r_bits_resp          (master0_rresp                   ),
    .mem_axi4_0_r_bits_last          (master0_rlast                   ),
    .mmio_axi4_0_aw_ready            (master1_awready                 ),
    .mmio_axi4_0_aw_valid            (master1_awvalid                 ),
    .mmio_axi4_0_aw_bits_id          (master1_awid                    ),
    .mmio_axi4_0_aw_bits_addr        (master1_awaddr[30:0]            ),
    .mmio_axi4_0_aw_bits_len         (master1_awlen                   ),
    .mmio_axi4_0_aw_bits_size        (master1_awsize                  ),
    .mmio_axi4_0_aw_bits_burst       (master1_awburst                 ),
    .mmio_axi4_0_aw_bits_lock        (master1_awlock                  ),
    .mmio_axi4_0_aw_bits_cache       (master1_awcache                 ),
    .mmio_axi4_0_aw_bits_prot        (master1_awprot                  ),
    .mmio_axi4_0_aw_bits_qos         (master1_awqos                   ),
    .mmio_axi4_0_w_ready             (master1_wready                  ),
    .mmio_axi4_0_w_valid             (master1_wvalid                  ),
    .mmio_axi4_0_w_bits_data         (master1_wdata             ),
    .mmio_axi4_0_w_bits_strb         (master1_wstrb                   ),
    .mmio_axi4_0_w_bits_last         (master1_wlast                   ),
    .mmio_axi4_0_b_ready             (master1_bready                  ),
    .mmio_axi4_0_b_valid             (master1_bvalid                  ),
    .mmio_axi4_0_b_bits_id           (master1_bid                     ),
    .mmio_axi4_0_b_bits_resp         (master1_bresp                   ),
    .mmio_axi4_0_ar_ready            (master1_arready                 ),
    .mmio_axi4_0_ar_valid            (master1_arvalid                 ),
    .mmio_axi4_0_ar_bits_id          (master1_arid                    ),
    .mmio_axi4_0_ar_bits_addr        (master1_araddr[30:0]            ),
    .mmio_axi4_0_ar_bits_len         (master1_arlen                   ),
    .mmio_axi4_0_ar_bits_size        (master1_arsize                  ),
    .mmio_axi4_0_ar_bits_burst       (master1_arburst                 ),
    .mmio_axi4_0_ar_bits_lock        (master1_arlock                  ),
    .mmio_axi4_0_ar_bits_cache       (master1_arcache                 ),
    .mmio_axi4_0_ar_bits_prot        (master1_arprot                  ),
    .mmio_axi4_0_ar_bits_qos         (master1_arqos                   ),
    .mmio_axi4_0_r_ready             (master1_rready                  ),
    .mmio_axi4_0_r_valid             (master1_rvalid                  ),
    .mmio_axi4_0_r_bits_id           (master1_rid                     ),
    .mmio_axi4_0_r_bits_data         (master1_rdata             ),
    .mmio_axi4_0_r_bits_resp         (master1_rresp                   ),
    .mmio_axi4_0_r_bits_last         (master1_rlast                   )
  );

  // create a reset with the correct polarity
  assign reset = ~RST_N;

  // For now, use SiFive manufacturing IDCODE, so that OpenOCD can recognize it
  assign debug_xilinxjtag_mfr_id = 11'h489;
  assign master0_awaddr[63:32] = 'b0;
  assign master0_araddr[63:32] = 'b0; 
  assign master0_arregion = 'b0;
  assign master0_awregion = 'b0;
  assign master1_awaddr[63:31] = 'b0;
  assign master1_araddr[63:31] = 'b0;
  assign master1_arregion = 'b0;
  assign master1_awregion = 'b0;

endmodule  // mkP1_Core

